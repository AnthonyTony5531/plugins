/*
 * @Author: your name
 * @Date: 2020-06-07 17:33:19
 * @LastEditTime: 2020-09-14 16:53:04
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: \xcsport-sdk-pcg:\project\xcsports-sdk-flutter\lib\config\fiexd_config.dart
 */

/*--------------------------------------------------------
 * 创建: south
 * 日期: 2019-10-21
 * 说明：
 * -------------------------------------------------------
 *   版本          修改人           说明
 *  1.0.0.0       south            创建
 **********************************************************/

import 'package:fast_ai/utils/ai_json.dart';
import 'package:fast_ai/utils/util.dart';
import 'package:flutter/material.dart';

class FiexdConfig {
  String webPrefix = "http://xxx.xxx.com";

  // Odds开启定时更新原列表or详情周期更新为当前周期
  int get autoOpenOddsUpdateTime => 60;

  //banner更新周期,单位秒
  int get bannerUpdateTime => 300;

  //菜单更新周期,单位秒
  int get menuUpdateTime => 30;

  //串关更新周期，单位秒
  int get skipmatchMatchUpdateTime => 60;

  //今日更新周期，单位秒
  int get earlyMatchUpdateTime => 60;

  //今日更新周期，单位秒
  int get todayMatchUpdateTime => 30;

  //走地更新周期，单位秒
  int get /**/ runningMatchUpdateTime => 10;

  int get /**/ runningBkUpdateTime => 3;

  //走地非必要接口更新时间周期
  int get runningLessImportantUpdateTime => 30;

  //今日早盘非必要接口更新时间周期
  int get showTypeFtLessImportantUpdateTime => 120;

  //热门更新周期，单位秒8
  int get hotMatchUpdateTime => 30;

  //首次进入应用热门投注推荐更新周期，单位秒
  int get hotMatchRecommendUpdateTime => 30;

  //模块配置信息更新周期，3600秒，1小时
  int get moduleConfigUpdatePeriod => 3600;

  //两次显示热门投注推荐时间间隔,4小时
  int get showMatchRecommendTime => 14400000;

  //WebView超時時間,单位秒
  int get webViewTimeoutTime => 10;

  //遊戲更新周期，单位秒
  int get gameUpdateTime => 300;

  //跟投頁刷新，单位秒
  int get allBetListUpdateTime => 10;

  int get watchLiveTime => 30;
  //查询自由播赛事和游戏状态
  int get freeAnchorUpdateQueryTime => 10;


  //默认有X玩法gameType球类
  List<String> get defaultGameType1X2 => ['FT', 'OP_IH', 'OP_HB', 'OP_RU', 'OP_FH', 'OP_FB', 'OP_JR', 'OP_FU'];
  // 有X玩法gameType球类
  List<String> get gameType1X2{
    var gameTypes = AiJson(baseLang).getArray('gameType1X2');
    if(gameTypes.isEmpty){
      gameTypes = defaultGameType1X2;
    }
    var list = gameTypes?.map((e) => e?.toString())?.toList();
    return list;
  }

  //详情显示投注比率的玩法
  //足球： 1X2/全场让球/大小/单双，上半场1X2/上半场让球/大小/单双
  //其他： 全场胜负/让分/大小
  Map<String, List<String>> get showRatePlayType => {
        'FT': [
          'M',
          'RM',
          'HM',
          'HRM',
          'R',
          'RE',
          'HR',
          'HRE',
          'OU',
          'ROU',
          'HROU',
          'HOU',
          'EO',
          'REO',
          'HEO',
          'HREO'
        ],
        'OTHER': ['M', 'RM', 'R', 'RE', 'OU', 'ROU']
      };

  //让球玩法
  List<String> get letBallMap => [
        'R',
        'RE',
        'HR',
        'HRE',
        'AR',
        'BR',
        'CR',
        'DR',
        'ER',
        'FR',
        'PR',
        'SR',
        'RG',
        'OTR',
        'OTHR',
        'MR_RH',
        'MR_KH',
        'MR_TH',
        'QR',
        'IR',
        'GR',
        'R15',
        'R16',
        'R17',
        'RS',
        'R18',
        'R_PS',
        'R19',
        'Rconner',
        'HRconner',
        'Rcard',
        'R_Conner',
        'HR_Conner',
        'M_FR1',
        'M_FR2',
        'M_FR3',
        'HAR',
        'HW3',
        'UPCR',
        'HR2',
        'SOTR',
        'UPCR',
        'RA',
        'RB',
        'RC',
        'ARE',
        'R_conner',
        'R2OU_conner',
        'HR_conner',
        'R1',
        'R2',
        'R3',
        'FSR',
        'RD',
        'R_card',
        'AR_OT',
        'RE2',
        'RE3',
        'BP',
        'OSR',
        'RE1',
        'RAH',
        'RE4',
        'AH',
        'AH_OT',
        'UHR',
        'RW3_OT',
        'RE1',
        'RE2',
        'RE3',
        'RE4',
        'RE5',
        'RE_OT',
        'R_OT',
        'RSE',
        'RE_PS'
      ];

  List<String> get w3 => ['W3', 'HW3', 'RW3'];

  List<String> get w3RatioType => ['W3N', 'HW3N', 'RW3N'];

  // 波胆玩法
  List<String> get playTypePD => [
        'PD',
        'RPD',
        'HPD',
        'HRPD',
        'PD_Conner',
        'HPD_Conner',
        'PD_OT',
        'RPD_OT',
        'HPD_OT',
        'HRPD_OT',
        'PD_PS',
        'RPD_PS',
        'HPD_PS',
        'HRPD_PS',
        'PD1',
        'PD2',
        'PD5',
        'PD7',
        'OTPD'
      ];

  // 非实际波胆玩法球种(篮球：PD,RPD)
  List<String> get gameTypeNoPlayPD => [
        'BK',
  ];

  List<String> get playTypePDRatioType => [
        'OVCH',
        'ORVCH',
        'ROVH',
        'HROVC',
        'OVH',
        'HOVH',
        'HROVH',
        'OVH/OVC',
        'ROVH/ROVC',
        'HOVH/HOVC',
        'HROVH/HROVC'
      ];

  //1X2玩法
  List<String> get playType1X2 => [
        'M',
        'RM',
        'HM',
        'HRM',
        'M_OT',
        'RM_OT',
        'HM_OT',
        'HRM_OT',
        'M_PS',
        'RM_PS',
        'HM_PS',
        'HRM_PS'
      ];

  List<String> get playType1X2RatioTypeN => ['MN', 'RMN'];

  //子比赛玩法后缀
  List<String> suffixPlayType = [
    '_conner',
    '_card',
    '_OT',
    '_PS',
    '_promote',
    '_champion'
  ];

  String suffixNameToSuffixPlay(dynamic suffixName) {
    String suffixPlay = suffixName ?? '';
    if (!isStrNullOrEmpty(suffixName) &&
        suffixName.toString().indexOf('_') < 0) {
      if (suffixName.indexOf(baseLang['detail']['conner']) > -1) {
        suffixPlay = suffixPlayType[0]; // '_conner'; //角球
      } else if (suffixName.indexOf(baseLang['detail']['card']) > -1 ||
          suffixName.indexOf(baseLang['detail']['card1']) > -1) {
        suffixPlay = suffixPlayType[1]; // '_card'; //罚牌
      } else if (suffixName.indexOf(baseLang['detail']['OT']) > -1 ||
          suffixName.indexOf(baseLang['detail']['OT1']) > -1) {
        suffixPlay = suffixPlayType[2]; //'_OT'; //加时
      } else if (suffixName.indexOf(baseLang['detail']['PS']) > -1 ||
          suffixName.indexOf(baseLang['detail']['PS1']) > -1) {
        suffixPlay = suffixPlayType[3]; // '_PS'; // 点球
      } else if (suffixName.indexOf(baseLang['detail']['promote']) > -1 ||
          suffixName.indexOf(baseLang['detail']['promote1']) > -1) {
        suffixPlay = suffixPlayType[4]; // '_promote'; //会晋级
      } else if (suffixName.indexOf(baseLang['detail']['champion']) > -1 ||
          suffixName.indexOf(baseLang['detail']['champion1']) > -1) {
        suffixPlay = suffixPlayType[5]; // '_champion'; //冠军
      }
      if (suffixName.indexOf(baseLang['detail']['OT']) > -1 ||
          suffixName.indexOf(baseLang['detail']['OT1']) > -1) {
        if (suffixPlay == suffixPlayType[0] ||
            suffixPlay == suffixPlayType[1]) {
          suffixPlay = suffixPlay.replaceAll('_', '') +
              suffixPlayType[
                  2]; //'conner_OT'  //加时-角球 || 加时-罚牌  //Rconner_OT:加时赛角球让球
        }

        print(suffixPlay);
      }
    }
    return suffixPlay;
  }

  //默认展开的玩法
  List<String> get playTypeDefaultOpen => [
        'M',
        'RM',
        'RE',
        'R',
        'ROU',
        'OU',
        'PD',
        'RPD',
        'HM',
        'HRM',
        'HRE',
        'HR',
        'HOU',
        'HROU',
        'HPD',
        'HRPD',
        'AM',
        'AR',
        'AOU',
        'AROU',
        'RM_OT',
        'ROU_OT',
        'RE_OT',
        'HRM_OT',
        'HRE_OT',
        'M_PS',
        'ROU_PS',
        'RE_PS',
      ];

  //MN、RMN
  //小白大小玩法
  List<String> get verType2OU => [
        'OU',
        'ROU',
        'HOU',
        'HROU',
        'AOU',
        'BOU',
        'COU',
        'DOU',
        'EOU',
        'FOU',
        'HOUC',
        'HOUH',
        'OUC',
        'OUH',
        'AROU',
        'BROU',
        'DROU',
        'EROU',
        'HRUC',
        'HRUH',
        'ROUC',
        'ROUH',
        'HAOU',
      ];

  //角球罚牌中，第几个角球和第几个罚牌的玩法，需要随亚欧盘切换（只限IBO）
  List<String> get iboSpecialOddsTypeChange => [
        'RNBA',
        'RNBB',
        'RNBC',
        'RNBD',
        'RNBE',
        'RNBF',
        'RNBG',
        'RNBH',
        'RNBI',
        'RNBJ',
        'RNBK',
        'RNBL',
        'RNBM',
        'RNBN',
        'RNBO',
        'RNC1',
        'RNC2',
        'RNC3',
        'RNC4',
        'RNC5',
        'RNC6',
        'RNC7',
        'RNC8',
        'RNC9',
        'RNCA',
        'RNCB',
        'RNCC',
        'RNCD',
        'RNCE',
        'RNCF',
        'RNCG',
        'RNCH',
        'RNCI',
        'RNCJ',
        'RNCK',
        'RNCL',
        'RNCM',
        'RNCN',
        'RNCO',
        'RNCP',
        'RNCQ',
        'RNCR',
        'RNCS',
        'RNCT',
        'RNCU',
        // 'RSHA',
        // 'RSHB',
        // 'RSHC',
        // 'RSHD',
        // 'RSHE',
        // 'RSHF',
        // 'RSHG',
        // 'RSHH',
        // 'RSHI',
        // 'RSHJ',
        // 'RSHK',
        // 'RSHL',
        // 'RSHM',
        // 'RSHN',
        // 'RSHO',
        // 'RSCA',
        // 'RSCB',
        // 'RSCC',
        // 'RSCD',
        // 'RSCE',
        // 'RSCF',
        // 'RSCG',
        // 'RSCH',
        // 'RSCI',
        // 'RSCJ',
        // 'RSCK',
        // 'RSCL',
        // 'RSCM',
        // 'RSCN',
        // 'RSCO',
      ];

  //需要切换赔率的玩法
  List<String> get oddsTypeChangeArray1111 => [
        'R',
        'RE',
        'OU',
        'ROU',
        'HR',
        'HRE',
        'HOU',
        'HROU',
        'OUH',
        'ROUH',
        'OUC',
        'ROUC',
        'HOUH',
        'HRUH',
        'HOUC',
        'HRUC',
        'AR',
        'AOU',
        'AROU',
        'BR',
        'BOU',
        'BROU',
        'CR',
        'COU',
        'DR',
        'DOU',
        'DROU',
        'ER',
        'EOU',
        'EROU',
        'FR',
        'FOU',
        'HOU2',
        'AOU_FOU',
        'TOU_FOU',
        'OTOU',
        'OTR',
        'OTHR',
        'NH',
        'AH',
        'HN',
        'AN',
        'OUH1',
        'OUA1',
        '1M_FOU',
        'QOUH',
        'QOUC',
        'GOUH',
        'GOUC',
        'POU',
        'TTO',
        'TFG',
        'MR_RH',
        'MOU_RT',
        'MOU_TH',
        'MOU_RXT',
        'MR_KH',
        'MOU_TKH',
        'MOU_TKC',
        'MOU_TK',
        'MOU_TT',
        'MOU_TKFT',
        'POUH',
        'POUC',
        'PR',
        'SOU',
        'RL',
        'LOU',
        'SLR',
        'SLOU',
        'R_TE',
        'OU_TE',
        'OU_TEH',
        'OU_TEC',
        'OU_TES',
        'RG',
        'OUG',
        'SR',
        'GR',
        'GOU',
        'QOU',
        'QR',
        'IOU',
        'IR',
        'IOUH',
        'IOUC',
        'RS',
        'R15',
        'R16',
        'KR',
        'KOU',
        'TARU',
        'TBRU',
        'TCRU',
        'TDRU',
        'TERU',
        'R17',
        'R18',
        'R19',
        'Rconner',
        'HRconner',
        'OUconner',
        'HOUcard',
        'Rcard',
        'CROU',
        'FROU',
        'HOUS',
        'C',
        'LC',
        '1M',
        'OUHT',
        'OUCT',
        'OUHOT',
        'OUCOT',
        'OUHST',
        'OUCST'
      ];

  //IBO需要切换赔率的双线玩法
  List<String> get iboOddsTypeChangeArray => [
        "RSCA",
        "RSCB",
        "RSCC",
        "RSCD",
        "RSCE",
        "RSCF",
        "RSCG",
        "RSCH",
        "RSCI",
        "RSCJ",
        "RSCK",
        "RSCL",
        "RSCM",
        "RSCN",
        "RSCO",
        "RSHA",
        "RSHB",
        "RSHC",
        "RSHD",
        "RSHE",
        "RSHF",
        "RSHG",
        "RSHH",
        "RSHI",
        "RSHJ",
        "RSHK",
        "RSHL",
        "RSHM",
        "RSHN",
        "RSHO",
        "R",
        "RE",
        "OU",
        "ROU",
        "HR",
        "HRE",
        "HOU",
        "HROU",
        "OUH",
        "ROUH",
        "OUC",
        "ROUC",
        "HOUH",
        "HRUH",
        "HOUC",
        "HRUC",
        "AR",
        "AOU",
        "AROU",
        "BR",
        "BOU",
        "BROU",
        "CR",
        "COU",
        "DR",
        "DOU",
        "DROU",
        "ER",
        "EOU",
        "EROU",
        "FR",
        "FOU",
        "HOU2",
        "AOU_FOU",
        "TOU_FOU",
        "OTOU",
        "OTR",
        "OTHR",
        "NH",
        "AH",
        "HN",
        "AN",
        "OUH1",
        "OUA1",
        "1M_FOU",
        "QOUH",
        "QOUC",
        "GOUH",
        "GOUC",
        "POU",
        "TTO",
        "TFG",
        "MR_RH",
        "MOU_RT",
        "MOU_TH",
        "MOU_RXT",
        "MR_KH",
        "MOU_TKH",
        "MOU_TKC",
        "MOU_TK",
        "MOU_TT",
        "MOU_TKFT",
        "POUH",
        "POUC",
        "PR",
        "SOU",
        "RL",
        "LOU",
        "SLR",
        "SLOU",
        "R_TE",
        "OU_TE",
        "OU_TEH",
        "OU_TEC",
        "OU_TES",
        "RG",
        "OUG",
        "SR",
        "GR",
        "GOU",
        "QOU",
        "QR",
        "IOU",
        "IR",
        "IOUH",
        "IOUC",
        "RS",
        "R15",
        "R16",
        "KR",
        "KOU",
        "TARU",
        "TBRU",
        "TCRU",
        "TDRU",
        "TERU",
        "R17",
        "R18",
        "R19",
        "Rconner",
        "HRconner",
        "OUconner",
        "HOUcard",
        "Rcard",
        "CROU",
        "FROU",
        "HOUS",
        "C",
        "LC",
        "1M",
        "OUHT",
        "OUCT",
        "OUHOT",
        "OUCOT",
        "OUHST",
        "OUCST",
        "RNBA",
        "RNBB",
        "RNBC",
        "RNBD",
        "RNBE",
        "RNBF",
        "RNBG",
        "RNBH",
        "RNBI",
        "RNBJ",
        "RNBK",
        "RNBL",
        "RNBM",
        "RNBN",
        "RNBO",
        "RNC1",
        "RNC2",
        "RNC3",
        "RNC4",
        "RNC5",
        "RNC6",
        "RNC7",
        "RNC8",
        "RNC9",
        "RNCA",
        "RNCB",
        "RNCC",
        "RNCD",
        "RNCE",
        "RNCF",
        "RNCG",
        "RNCH",
        "RNCI",
        "RNCJ",
        "RNCK",
        "RNCL",
        "RNCM",
        "RNCN",
        "RNCO",
        "RNCP",
        "RNCQ",
        "RNCR",
        "RNCS",
        "RNCT",
        "RNCU"
      ];

  //sd需要切换赔率的双线玩法
  List<String> get sdOddsTypeChangeArray => [
        "R",
        "RE",
        "OU",
        "ROU",
        "HR",
        "HRE",
        "HOU",
        "HROU",
        "OUH",
        "ROUH",
        "OUC",
        "ROUC",
        "HOUH",
        "HRUH",
        "HOUC",
        "HRUC",
        "AR",
        "AOU",
        "AROU",
        "BR",
        "BOU",
        "BROU",
        "CR",
        "COU",
        "DR",
        "DOU",
        "DROU",
        "ER",
        "EOU",
        "EROU",
        "FR",
        "FOU",
        "HOU2",
        "AOU_FOU",
        "TOU_FOU",
        "OTOU",
        "OTR",
        "OTHR",
        "NH",
        "AH",
        "HN",
        "AN",
        "OUH1",
        "OUA1",
        "1M_FOU",
        "QOUH",
        "QOUC",
        "GOUH",
        "GOUC",
        "POU",
        "TTO",
        "TFG",
        "MR_RH",
        "MOU_RT",
        "MOU_TH",
        "MOU_RXT",
        "MR_KH",
        "MOU_TKH",
        "MOU_TKC",
        "MOU_TK",
        "MOU_TT",
        "MOU_TKFT",
        "POUH",
        "POUC",
        "PR",
        "SOU",
        "RL",
        "LOU",
        "SLR",
        "SLOU",
        "R_TE",
        "OU_TE",
        "OU_TEH",
        "OU_TEC",
        "OU_TES",
        "RG",
        "OUG",
        "SR",
        "GR",
        "GOU",
        "QOU",
        "QR",
        "IOU",
        "IR",
        "IOUH",
        "IOUC",
        "RS",
        "R15",
        "R16",
        "KR",
        "KOU",
        "TARU",
        "TBRU",
        "TCRU",
        "TDRU",
        "TERU",
        "R17",
        "R18",
        "R19",
        "Rconner",
        "HRconner",
        "OUconner",
        "HOUcard",
        "Rcard",
        "CROU",
        "FROU",
        "HOUS",
        "C",
        "LC",
        "1M",
        "OUHT",
        "OUCT",
        "OUHOT",
        "OUCOT",
        "OUHST",
        "OUCST",
        "R_champion"
      ];

  List<String> get btiOddsTypeChangeArray => [
        "ROUC_PS",
        "ROUH_PS",
        "HROUC",
        "HROUH",
        "RHIT",
        "TTB_card",
        "RPOU",
        "HOU2",
        "AG",
        "AH",
        "AH_OT",
        "YBOU",
        "MCOU",
        "OUK",
        "RK",
        "RAG",
        "RAG_OT",
        "RAH",
        "RAH_OT",
        "YBR",
        "BPOU",
        "RTTG_PS",
        "ROUA",
        "ROUB",
        "ROUD",
        "ROUE",
        "ROUF",
        "ROUG",
        "PHR",
        "PSO",
        "PH",
        "PTB",
        "PHA",
        "PHRA",
        "PSOT",
        "RTTG3",
        "MROUF",
        "MROUE",
        "ARE_OT",
        "RTOU",
        "HIT",
        "QOUC6",
        "QOUC4",
        "RTTG",
        "QOUC5",
        "OUHST0",
        "FIAR",
        "RNBB_card",
        "R2OU_conner",
        "HRconner_OT",
        "RNC1_OT",
        "QOUC3",
        "UHR",
        "WLS",
        "FIHROU",
        "IR4",
        "IR6",
        "HOS",
        "IR5",
        "IR8",
        "HOU",
        "IR7",
        "RNC6_conner",
        "AR",
        "IR9",
        "TARU_OT",
        "TEKROU",
        "RNC2_conner",
        "UPCOU",
        "ROUC_OT",
        "OU_card",
        "BP",
        "LC_conner",
        "REC13_conner",
        "REC17_conner",
        "BR",
        "CFS",
        "HROU",
        "R",
        "HDTK",
        "FICR",
        "REC2_conner",
        "REC6_conner",
        "HOU_card",
        "TEJROU",
        "THO",
        "RE0",
        "HTTG",
        "OUC_card",
        "RE2",
        "RE1",
        "HRTTG",
        "RE4",
        "ARE2",
        "RE3",
        "ARE3",
        "RE6",
        "RE5",
        "ARE1",
        "RE8",
        "TERU_OT",
        "RE7",
        "TTO0",
        "RE9",
        "HR2",
        "GOU",
        "UPCR",
        "CR",
        "HRE_card",
        "SAAROU",
        "FIBR",
        "RNBM_card",
        "HRE",
        "OUHT0",
        "TEAROU",
        "DR",
        "FIER",
        "OUC4",
        "OUC3",
        "OUC0",
        "FIQROU",
        "TELROU",
        "RG0",
        "OUC6",
        "ARE6",
        "OUC5",
        "ARE4",
        "POU0",
        "ARE5",
        "MOU_TK",
        "HSR",
        "MOU_TH",
        "RNCN_conner",
        "IOUC5",
        "IOUC4",
        "MOU_TT",
        "IOUC7",
        "IOUC6",
        "IOUC9",
        "ER",
        "FOU",
        "IOUC8",
        "HRUH_conner",
        "FIDR",
        "TDRU_OT",
        "RNCF_conner",
        "SACROU",
        "ROUH_conner",
        "REC9_conner",
        "FM",
        "G0",
        "G1",
        "C_conner",
        "G2",
        "FR",
        "FIGROU",
        "FIGR",
        "HOUC_conner",
        "SABROU",
        "RNBF_card",
        "FW",
        "DR_OT",
        "R_OT",
        "RNBE_card",
        "R_promote",
        "UPGR",
        "HROU_conner",
        "RNCK_conner",
        "HOUC2",
        "HOUC1",
        "MOU_RT",
        "POUC",
        "EOU",
        "GR",
        "RTGOU_OT",
        "FIFR",
        "HOUconner_OT",
        "RNCC_conner",
        "HAR0",
        "RNCS_conner",
        "POUH",
        "HAR2",
        "HAR1",
        "RNC3_conner",
        "HAR4",
        "HAR3",
        "HOUcard_OT",
        "IOUH9",
        "HR",
        "FIIR",
        "FIEROU",
        "SLR",
        "FSR",
        "TEHROU",
        "IR",
        "IR10",
        "DOU",
        "IR11",
        "FIHR",
        "RNBC_card",
        "OUCOT0",
        "IOUH4",
        "IOUH6",
        "IOUH5",
        "FIPROU",
        "IOUH8",
        "IOUH7",
        "HRUC",
        "OUH_card",
        "HRUH_OT",
        "HROU_OT",
        "TOU",
        "HRUH",
        "SAIROU",
        "TEGROU",
        "ROU19",
        "FIKR",
        "ROUC_conner",
        "REC18_conner",
        "ROU22",
        "ROU23",
        "ROU24",
        "ROU25",
        "ROU6",
        "R_TE",
        "ROU7",
        "ROU4",
        "ROU5",
        "ROU2",
        "ROU3",
        "ROU0",
        "ROU20",
        "ROU1",
        "ROU21",
        "RNBA_card",
        "COS",
        "RNCI_conner",
        "COU",
        "FIJR",
        "OUH0",
        "FIFROU",
        "ROU11",
        "RNCE_conner",
        "OUH6",
        "ROU12",
        "RNC5_conner",
        "ROU13",
        "ROU14",
        "RNCU_conner",
        "OUH3",
        "ROU15",
        "RNC4_OT",
        "ROU16",
        "OUH5",
        "ROU17",
        "OUH4",
        "GOUC0",
        "ROU18",
        "SOU",
        "RNBJ_card",
        "RE_card",
        "RNC9_conner",
        "ROUH_card",
        "TGOU_OT",
        "ROU10",
        "OU_TES",
        "HOUH2",
        "ROU_PS",
        "TEIROU",
        "RNBH_card",
        "RLOU",
        "FIMR",
        "MOU_TKC",
        "HOUH1",
        "MOU_TKH",
        "DOU_OT",
        "T_OT",
        "ROU_OT",
        "RNCJ_conner",
        "ROU8",
        "ROU9",
        "BOU",
        "FILR",
        "ROUC",
        "HR2_conner",
        "FIDROU",
        "OU_TEC",
        "RNCD_conner",
        "ROUH",
        "RNCT_conner",
        "OU_TEH",
        "RNC2_OT",
        "QOUH3",
        "ROU",
        "QOUH4",
        "QOUH5",
        "QOUH6",
        "REC12_conner",
        "TTG",
        "FIOR",
        "AROU",
        "REC5_conner",
        "FIOROU",
        "ROUC_card",
        "DVOU",
        "RNC3_OT",
        "SLOU",
        "HROU2",
        "CSR",
        "OU",
        "AOU",
        "FINR",
        "RNCO_conner",
        "SOTOU",
        "OUH_conner",
        "HOUC",
        "R16",
        "QOU",
        "R15",
        "R18",
        "R17",
        "RCDOU",
        "HOUH",
        "R19",
        "SOTR",
        "TEEROU",
        "PR",
        "FIQR",
        "IOU5",
        "IOU6",
        "IOU4",
        "SAGROU",
        "IOU9",
        "IOU7",
        "IOU8",
        "RRL",
        "TOU1",
        "TOU0",
        "FIMROU",
        "IOUC",
        "GOUH0",
        "TOU6",
        "IOUH",
        "RNBO_card",
        "TOU5",
        "TOU4",
        "R0",
        "TOU3",
        "R1",
        "TOU2",
        "AR0",
        "R2",
        "AR1",
        "R3",
        "QR",
        "R4",
        "AR3",
        "R5",
        "R6",
        "FIPR",
        "R7",
        "R8",
        "R9",
        "BROU",
        "RE_conner",
        "RA_conner",
        "OUCST0",
        "RA",
        "RB",
        "RD",
        "RE",
        "HOU_conner",
        "ARE",
        "RG",
        "RNC6_OT",
        "RTTG1",
        "POU",
        "RTTG2",
        "OUC_conner",
        "RL",
        "RNC8_conner",
        "RNC4_conner",
        "RQ",
        "RTGOU",
        "IOUC10",
        "RS",
        "TEAR",
        "IOUC11",
        "FICROU",
        "MR_KH",
        "SAFROU",
        "RNC7_OT",
        "ROU_conner",
        "T1",
        "T2",
        "OU_OT",
        "SR",
        "RNBD_card",
        "IOU11",
        "IOU10",
        "FINROU",
        "HAR",
        "AROU1",
        "AROU2",
        "TT",
        "AROU5",
        "AROU6",
        "AROU3",
        "TECR",
        "AROU4",
        "CROU",
        "FIAROU",
        "RNC5_OT",
        "ROU_card",
        "TEDR",
        "TFG0",
        "TEBR",
        "OTOU",
        "HROU2_conner",
        "FILROU",
        "RNCP_conner",
        "RNCH_conner",
        "OUCT0",
        "OU_conner",
        "RNBK_card",
        "REC11_conner",
        "HRUC_conner",
        "REC16_conner",
        "REC19_conner",
        "DROU",
        "RNBL_card",
        "REC4_conner",
        "SAAR",
        "TCRU_OT",
        "TEFR",
        "B_card",
        "SAHROU",
        "TEFROU",
        "FIBROU",
        "OSR",
        "OSOU",
        "TEER",
        "RNBN_card",
        "AR_OT",
        "OU1",
        "OU0",
        "OU3",
        "OTR",
        "OU2",
        "OU5",
        "OU4",
        "OU7",
        "OU6",
        "RNBB_OT",
        "OU9",
        "OU8",
        "HFS",
        "SADROU",
        "HRUC_OT",
        "OUHOT0",
        "OUA",
        "SACR",
        "OUC",
        "TEHR",
        "OUB",
        "OUD",
        "OUG",
        "UPGOU",
        "OUF",
        "OUH",
        "OUL",
        "OUcard_OT",
        "OUQ",
        "RE_PS",
        "MR_TH",
        "HR_card",
        "AOU3",
        "LOU",
        "AOU1",
        "HRE2",
        "AOU0",
        "SABR",
        "TEGR",
        "TTG_OT",
        "HRcard_OT",
        "FIKROU",
        "REC10_conner",
        "REC14_conner",
        "FSOU",
        "REC3_conner",
        "REC7_conner",
        "SAER",
        "TEJR",
        "HAOU",
        "HAOU4",
        "HAOU3",
        "HAOU0",
        "TEBROU",
        "TBRU_OT",
        "MOU_TKFT",
        "RNCM_conner",
        "HAOU2",
        "HOUH_conner",
        "HAOU1",
        "MOU_RXT",
        "TTG3",
        "TTG2",
        "TTG1",
        "EROU",
        "MR_RH",
        "RNCQ_conner",
        "RNCA_conner",
        "SADR",
        "TEMROU",
        "TEIR",
        "RNC1_conner",
        "RNBG_card",
        "RNBC_OT",
        "REC20_conner",
        "FIIROU",
        "R_card",
        "TELR",
        "RE25",
        "RNBI_card",
        "RE23",
        "OUconner_OT",
        "RE24",
        "RE21",
        "RE22",
        "RE20",
        "HROU_card",
        "UHOU",
        "SAGR",
        "RNCL_conner",
        "HR_conner",
        "TEDROU",
        "HRE_OT",
        "R_conner",
        "ROUH_OT",
        "RE14",
        "RE15",
        "PAOU",
        "RE12",
        "RNBA_OT",
        "RE13",
        "RE10",
        "RE11",
        "RNCR_conner",
        "RNCB_conner",
        "SAFR",
        "RE18",
        "RE19",
        "TGOU",
        "RE16",
        "TEKR",
        "RE17",
        "TD0",
        "TECROU",
        "Rcard_OT",
        "REC15_conner",
        "SAIR",
        "TENR",
        "RTTG_conner",
        "TENROU",
        "HTOU",
        "RE_OT",
        "REC8_conner",
        "HRE_conner",
        "FIJROU",
        "HOU2_conner",
        "OU_TE",
        "IOU",
        "TEMR",
        "RNC7_conner",
        "R_champion",
        "RNCG_conner",
        "SAEROU",
        "RTTG_OT",
        "HTGOU",
        "SAHR",
        "Rconner_OT"
      ];

  List<String> get halfROddsTypeChangeArray => [
        "HRFM",
        "HR_conner",
        "HW3",
        "HRE_OT",
        "HAR",
        "HRconner_OT",
        "HR",
        "HRE",
        "OTHR",
      ];

  List<String> get rOddsTypeChangeArray => [
        "PR",
        "AR_OT",
        "R_card",
        "OTR",
        "DR",
        "RW3",
        "RFM",
        "M_FR1",
        "M_FR3",
        "M_FR2",
        "R1",
        "R2",
        "QR",
        "UPGOU",
        "R3",
        "FSR",
        "AH",
        "IR",
        "R_conner",
        "RE_PS",
        "ER",
        "MR_TH",
        "RA",
        "RB",
        "AR",
        "RC",
        "RD",
        "RE",
        "ARE",
        "RG",
        "RK",
        "W3",
        "RS",
        "Rcard_OT",
        "RAH_OT",
        "FR",
        "BP",
        "BR",
        "R",
        "MR_KH",
        "RE_OT",
        "RE2",
        "SR",
        "RE1",
        "RE4",
        "RE3",
        "RE5",
        "YBR",
        "HR2",
        "GR",
        "UPCR",
        "CR",
        "OSR",
        "MR_RH",
        "AHPT",
        "R16",
        "R15",
        "R18",
        "HAR",
        "RAH",
        "R17",
        "RW3_OT",
        "R19",
        "SOTR",
        "Rconner_OT",
  ];

  String _gidm = "";
  int _idx = 0;

  bool closeChatTitle = false;

  void setMoreIndex(int idx, String gidm) {
    _idx = idx;
    _gidm = gidm;
  }

  int getMoreIndex(String gidm) {
    if (_gidm == gidm) return _idx;
    return 0;
  }

  Offset floatOffset = Offset(100, 200);

  void resetFloatOffset() {
    floatOffset = Offset(100, 200);
  }

  //足球：对应该法在注单记录中是否显示比分
  bool showScorePlayType(String playType) {
    if (letBallMap.contains(playType) ||
        w3.contains(playType) ||
        w3RatioType.contains(playType)) {
      return true;
    } else {
      return false;
    }
  }

  List<String> vmSportTypes = [
    "vflm",
    "vfas",
    "vfcc",
    "vfwc",
    "vfec",
    "vfnc",
    "vbl",
  ];

  //网球波旦
  List<String> get _tnPlayTypePD => [
        'TN_PD',
        'TN_RPD',
      ];

  //篮球波旦
  List<String> get _bkPlayTypePD => [
        'BK_PD',
        'BK_RPD',
  ];

  bool isTnPlayTypePD(String gameType, String playType) {
    return _tnPlayTypePD.contains("${gameType}_$playType");
  }

  bool isBkPlayTypePD(String gameType, String playType) {
        return _bkPlayTypePD.contains("${gameType}_$playType");
  }

  List<String> get halfPlayTypeArray =>[
  'HM', 'HRM', 'DC_H', 'DNB_H', 'HR', 'HRE', 'HOU', 'HROU', 'HOUH', 'HRUH', 'HOUC', 'HRUC',
  'HT', 'HRT', 'HEO', 'HREO', 'HTS', 'MBTS_H', 'MOU_H', 'HPD', 'HRPD', 'OTHM', 'OTHR', 'HM_Card',
  'HR_Card', 'HOU_Card', 'HEO_Card', 'HM_Conner', 'HR_Conner', 'HOU_Conner', 'OUH1_Conner', 'OUA1_Conner',
  'HEO_Conner', 'HEOH', 'HEOC', 'RE_OT', 'HWM'
  ];
}
